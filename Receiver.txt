#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>
RF24 radio(9, 10); // CE, CSN
const byte address[10] = "robotistan100";
Adafruit_PCD8544 display = Adafruit_PCD8544(7, 6, 5, 4, 3);
float list[3];
int b_int = 1;
void setup() {
  Serial.begin(9600);
  radio.begin();
  radio.openReadingPipe(0, address);
  radio.setChannel(0x76);
  radio.setPALevel(RF24_PA_MAX);
  radio.setDataRate(RF24_250KBPS);
  radio.startListening();
  radio.enableDynamicPayloads();
  radio.powerUp();
  display.begin();
  display.setContrast(57);
  display.clearDisplay();
  
}
void loop() {
  if (radio.available()) {
    if(b_int == 1)
    {
    int b_time = millis();
    do
    {
    display.display();
    display.clearDisplay();

    display.setTextSize(1);
    display.setTextColor(BLACK);
    display.setCursor(0,0);
    display.println("Aslan Y.O");
    display.setTextColor(BLACK);
    display.setCursor(0,8);    
    display.println("Welcome");
    }while(millis()-b_time < 3000);
    b_int = 5;
    }
    radio.read(list, sizeof(list));
    int okunan = analogRead(A0);
    Serial.println(list[0]);
    Serial.println(list[1]);
    Serial.println(list[2]);
    if(okunan < 512)
    {
    display.display();
    display.clearDisplay();

    display.setTextSize(1);
    display.setTextColor(BLACK);
    display.setCursor(0,0);
    display.println("Latitude: ");
    display.setTextColor(BLACK);
    display.setCursor(0,8);    
    display.println(list[0],6);
    display.setTextColor(BLACK);
    display.setCursor(0,16);
    display.println("Longitude: ");
    display.setTextColor(BLACK);
    display.setCursor(0,24);    
    display.println(list[1],6);
    /*
    display.display();
    display.clearDisplay();
    */
    }
    else
    {
    display.display();
    display.clearDisplay();
    while(okunan >= 512)
    {
    for(int i = 84; i >= 0; i--)
    {
    okunan = analogRead(A0);
	  radio.read(list, sizeof(list));
	  if(list[2] >= 500)
	  {
	  list[2] = 500;
	  }
	  if(list[2] <= 20)
	  {
	  list[2] = 0;
	  }
	  list[2] = map(list[2], 0, 500, 0, 48);
    for(int j = 0; j <= 48; j++)
    { 
    if(j < list[2])
    {
    display.setTextSize(1);
    display.setTextColor(BLACK);
    display.setCursor(i, j);
    display.println(".");
    display.display();
    }
    else
    {
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(i, j);
    display.println(".");
    display.display();
    }
    }
	  }
	  display.clearDisplay();
    }
    /*
    display.display();
    display.clearDisplay();
    */
    }
  }
  else
  {
    display.display();
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(BLACK);
    display.setCursor(0,0);
    display.println("No connect");
    /*
    display.display();
    display.clearDisplay();
    */
  }
}
